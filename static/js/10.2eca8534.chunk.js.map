{"version":3,"sources":["contexts/PastLotteryDataContext.tsx","views/Lottery/components/Hero.tsx","utils/getLotteryRoundData.ts","hooks/useGetRecentLotteryRoundData.ts","views/Lottery/components/PastLotteryRoundViewer/PastLotterySearcher.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardError.tsx","views/Lottery/components/LotteryCardHeading.tsx","views/Lottery/components/TicketCard/UserTicketsModal.tsx","views/Lottery/components/PastLotteryRoundViewer/PastLotteryActions.tsx","views/Lottery/components/PrizeGrid.tsx","views/Lottery/helpers/formatLotteryDate.ts","views/Lottery/components/Timestamp.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCardDetails.tsx","views/Lottery/components/PastLotteryRoundViewer/PastRoundCard.tsx","views/Lottery/components/Loading.tsx","views/Lottery/components/PastLotteryRoundViewer/index.tsx","views/Lottery/components/PastDrawsHistory/HistoryChart.tsx","views/Lottery/components/PastDrawsHistory/Legend.tsx","views/Lottery/components/PastDrawsHistory/PastDrawsHistoryCard.tsx","views/Lottery/components/YourPrizesCard/PrizesWonContent.tsx","views/Lottery/components/YourPrizesCard/NoPrizesContent.tsx","views/Lottery/components/YourPrizesCard/index.tsx","views/Lottery/components/UnlockWalletCard.tsx","views/Lottery/components/ClaimPrizesCard.tsx","views/Lottery/PastDrawsPage.tsx","views/Lottery/Lottery.tsx","views/Home/components/CardValue.tsx","views/Home/components/CardBusdValue.tsx","utils/lotteryUtils.ts","hooks/useTickets.ts","hooks/useBuyLottery.ts","components/Select/Select.tsx"],"names":["React","createContext","mostRecentLotteryNumber","historyError","historyData","Title","styled","Heading","attrs","as","scale","ComeBack","Text","StyledHero","div","theme","mediaQueries","sm","StyledContainer","Container","LeftWrapper","lg","RightWrapper","Hero","t","useTranslation","bold","mt","external","href","src","alt","getLotteryRoundData","lotteryNumber","a","fetch","response","json","data","Error","useGetRecentLotteryRoundData","useState","isLoading","setIsLoading","setData","error","setError","useContext","PastLotteryDataContext","useEffect","roundData","fetchRecentLotteryData","Wrapper","SearchWrapper","InputWrapper","ButtonWrapper","PastLotterySearcher","initialLotteryNumber","onSubmit","setLotteryNumber","isError","setIsError","evt","preventDefault","value","type","inputMode","min","isWarning","max","onChange","currentTarget","parseInt","disabled","PastRoundCardError","p","message","IconWrapper","LotteryCardHeading","valueToDisplay","children","Icon","props","flexDirection","fontSize","color","defaultProps","RewardP","TicketsList","colors","primary","StyledButton","Button","spacing","UserTicketsModal","myTicketNumbers","onDismiss","from","winNumbers","useWinningNumbers","rewardMatch","useCallback","number","n","i","length","listItems","map","index","emoji","Array","join","toString","title","TICKETS","variant","onClick","ExternalLinkWrap","LinkExternal","TicketCard","contractLink","tickets","useTickets","ticketsLength","useModal","onPresentMyTickets","useWeb3React","account","width","UnlockButton","Grid","pastDraw","RightAlignedText","RightAlignedHeading","GridItem","marginBottom","PastDrawGridItem","PrizeGrid","lotteryPrizeAmount","jackpotMatches","twoTicketMatches","threeTicketMatches","fourMatchesAmount","toFixed","threeMatchesAmount","twoMatchesAmount","burnAmount","cakeBusdPrice","usePriceCakeBusd","getCakeBusdValue","amount","BigNumber","multipliedBy","toNumber","toLocaleString","eq","CardBusdValue","formatLotteryDate","lotteryDate","date","Date","dateString","toDateString","hours","getUTCHours","monthAndDay","split","splice","Timestamp","timeValue","CardHeading","TopLotteryCardHeading","PastRoundCardDetails","jackpotTicket","lotteryNumbers","match2Ticket","match3Ticket","poolSize","mb","TicketRound","PancakeRoundIcon","PastLotteryActions","PastRoundCard","StyledLoading","Loading","StyledCardBody","CardBody","PastLotteryRoundViewer","isInitialized","state","setState","initialLotteryData","prevState","handleSubmit","then","catch","Line","lazy","Bar","InnerWrapper","HistoryChart","showLast","isDark","useTheme","getDataArray","kind","rawData","dataPoint","reverse","slice","Number","lineStyles","borderColor","fill","borderWidth","pointRadius","pointHitRadius","chartData","labels","datasets","label","yAxisID","axesStyles","borderCapStyle","gridLines","display","ticks","fontFamily","fontColor","lineHeight","maxRotation","beginAtZero","autoSkipPadding","userCallback","options","useMemo","tooltips","mode","intersect","legend","scales","yAxes","position","id","xAxes","fallback","LegendItem","Circle","isPoolSize","Legend","LabelWrapper","PastDrawsHistoryCard","setShowLast","textTransform","Select","option","WinningsWrapper","StyledCardActions","StyledCardContentInner","PrizesWonContent","onSuccess","requestedClaim","setRequestedClaim","useTotalClaim","claimLoading","claimAmount","onMultiClaim","useMultiClaimLottery","handleClaim","console","winnings","getBalanceNumber","style","marginRight","TextWrapper","StyledText","Image","img","md","NoPrizesContent","StyledCard","Card","isDisabled","textDisabled","YourPrizesCard","isAWin","isActive","StyledHeading","UnlockWalletCard","ClaimPrizesCard","setLastUpdated","handleSuccess","Cards","BaseLayout","SecondCardColumnWrapper","BunnyImageWrapper","PastDrawsPage","Lottery","lotteryContract","useLottery","setHistoryData","setHistoryError","currentLotteryNumber","setCurrentLotteryNumber","setMostRecentLotteryNumber","getLotteryIssueIndex","previousLotteryNumber","getInitialLotteryIndex","Page","Provider","CardValue","decimals","prefix","useCountUp","start","end","duration","separator","undefined","countUp","update","updateValue","useRef","current","multiCall","abi","calls","web3","getWeb3NoAccount","multi","eth","Contract","MultiCallAbi","getMulticallAddress","itf","Interface","res","newCalls","calldata","call","toLowerCase","encodeFunctionData","methods","aggregate","returnData","concat","decodeFunctionResult","multiBuy","price","numbersList","times","DEFAULT_TOKEN_DECIMAL","send","on","tx","transactionHash","getTickets","ticketsContract","customLotteryNum","issueIndex","getTicketsAmount","calls1","apply","address","ticketAbi","tokenIds","calls2","ticketIssues","finalTokenids","forEach","ticketIssue","push","calls3","getLotteryStatus","balanceOf","multiClaim","claimedStatus","unClaimedIds","filter","lotteryAbi","rewards","finalTokenIds","r","getTotalClaim","drawed","calls4","claim","reduce","c","sum","BIG_ZERO","getTotalRewards","getMax","maxNumber","getMatchingRewardLength","matchNumber","historyAmount","LOTTERY_TICKET_PRICE","getWinningNumbers","numbers","historyNumbers","winningNumbers","setClaimAmount","setClaimLoading","useLotteryTicket","useLastUpdated","lastUpdated","fetchBalance","setWinningNumbers","fastRefresh","useRefresh","setTickets","lotteryTicketContract","txHash","useMultiBuyLottery","onMultiBuy","useMaxNumber","setMax","fetchMax","DropDownHeader","shadows","inset","inputSecondary","input","DropDownListContainer","zIndices","dropdown","DropDownContainer","isOpen","css","tooltip","boxShadow","DropDownList","ul","ListItem","li","containerRef","dropdownRef","setIsOpen","selectedOption","setSelectedOption","height","containerSize","setContainerSize","toggling","onOptionClicked","offsetWidth","offsetHeight","ref"],"mappings":"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","file":"static/js/10.2eca8534.chunk.js","sourcesContent":["import React from 'react'\n\nexport interface PastLotteryDataState {\n  mostRecentLotteryNumber: number\n  currentLotteryNumber: number\n  historyError: boolean\n  historyData: Array<any>\n}\n\nexport default React.createContext({\n  mostRecentLotteryNumber: 0,\n  historyError: false,\n  historyData: [],\n} as PastLotteryDataState)\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Text, LinkExternal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport Container from 'components/layout/Container'\n\nconst Title = styled(Heading).attrs({ as: 'h1', scale: 'xl' })`\n  color: #ffffff;\n  margin-bottom: 24px;\n  text-shadow: 2px 2px 2px #00000040;\n`\n\nconst ComeBack = styled(Text)`\n  background: -webkit-linear-gradient(#ffd800, #eb8c00);\n  font-size: 24px;\n  font-weight: 600;\n  -webkit-background-clip: text;\n  -webkit-text-fill-color: transparent;\n`\n\nconst StyledHero = styled.div`\n  background-image: linear-gradient(#7645d9, #452a7a);\n  max-height: max-content;\n  overflow: hidden;\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-height: 256px;\n  }\n`\n\nconst StyledContainer = styled(Container)`\n  display: flex;\n\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-direction: row;\n  }\n`\n\nconst LeftWrapper = styled.div`\n  flex: 1;\n  padding-right: 0;\n  padding-bottom: 40px;\n  padding-top: 40px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-right: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-right: 32px;\n  }\n`\n\nconst RightWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex: 1;\n  padding-left: 0;\n\n  & img {\n    width: 80%;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n    padding-left: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-left: 32px;\n    & img {\n      margin-top: -25px;\n    }\n  }\n`\n\nconst Hero = () => {\n  const { t } = useTranslation()\n\n  return (\n    <StyledHero>\n      <StyledContainer>\n        <LeftWrapper>\n          <Title>{t('The Lottery Is Changing!')}</Title>\n          <ComeBack>{t('Come back soon!')}</ComeBack>\n          <LinkExternal\n            bold\n            mt={20}\n            external\n            href=\"https://voting.pancakeswap.finance/#/pancake/proposal/QmU8pcbmBrfbfVQXMMxmkExDq3mYq4s5cbBuFe6uCZzdmX\"\n          >\n            {t('Learn more')}\n          </LinkExternal>\n        </LeftWrapper>\n        <RightWrapper>\n          <img src=\"/images/tombola.png\" alt=\"lottery bunny\" />\n        </RightWrapper>\n      </StyledContainer>\n    </StyledHero>\n  )\n}\n\nexport default Hero\n","export type DataResponse = {\n  lotteryNumber: number\n  lotteryDate: string\n  lotteryNumbers: number[]\n  poolSize: number\n  burned: number\n  contractLink: string\n  jackpotTicket: number\n  match2Ticket: number\n  match3Ticket: number\n  match4Ticket: number\n  poolJackpot: number\n  poolMatch3: number\n  poolMatch2: number\n  poolMatch1: number | null\n\n  // TODO: Fill in the error type\n  error: any\n}\n\n/**\n * Get data for a specific lottery\n */\nconst getLotteryRoundData = async (lotteryNumber: number): Promise<DataResponse> => {\n  try {\n    const response = await fetch(`https://api.pancakeswap.com/api/singleLottery?lotteryNumber=${lotteryNumber}`)\n    const data = await response.json()\n\n    return data\n  } catch (error) {\n    throw new Error(error)\n  }\n}\n\nexport default getLotteryRoundData\n","import { useContext, useEffect, useState } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport getLotteryRoundData, { DataResponse } from 'utils/getLotteryRoundData'\n\ntype GetRecentLotteryRoundDataReturn = {\n  isLoading: boolean\n  data: DataResponse\n  mostRecentLotteryNumber: number\n  error: any\n}\n\nconst useGetRecentLotteryRoundData = (): GetRecentLotteryRoundDataReturn => {\n  const [isLoading, setIsLoading] = useState(true)\n  const [data, setData] = useState(null)\n  const [error, setError] = useState(null)\n  const { mostRecentLotteryNumber } = useContext(PastLotteryDataContext)\n\n  useEffect(() => {\n    const fetchRecentLotteryData = async () => {\n      try {\n        setIsLoading(true)\n\n        const roundData = await getLotteryRoundData(mostRecentLotteryNumber)\n        setData(roundData)\n      } catch (err) {\n        setError(err)\n      } finally {\n        setIsLoading(false)\n      }\n    }\n\n    if (mostRecentLotteryNumber > 0) {\n      fetchRecentLotteryData()\n    }\n  }, [mostRecentLotteryNumber, setData, setIsLoading, setError])\n\n  return { isLoading, data, mostRecentLotteryNumber, error }\n}\n\nexport default useGetRecentLotteryRoundData\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Text, Input, Button } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface PastLotterySearcherProps {\n  initialLotteryNumber: number\n  onSubmit: (num: number) => void\n}\n\nconst Wrapper = styled.div`\n  margin-bottom: 24px;\n`\n\nconst SearchWrapper = styled.div`\n  position: relative;\n`\nconst InputWrapper = styled.div`\n  input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n    margin: 0;\n  }\n\n  /* Firefox */\n  input[type='number'] {\n    -moz-appearance: textfield;\n  }\n`\n\nconst ButtonWrapper = styled.div`\n  position: absolute;\n  right: 8px;\n  top: 50%;\n  transform: translate(0%, -50%);\n  width: auto;\n`\n\nconst PastLotterySearcher: React.FC<PastLotterySearcherProps> = ({ initialLotteryNumber, onSubmit }) => {\n  const [lotteryNumber, setLotteryNumber] = useState(initialLotteryNumber)\n  const [isError, setIsError] = useState(false)\n  const { t } = useTranslation()\n\n  const handleSubmit = (evt: React.FormEvent<HTMLFormElement>) => {\n    evt.preventDefault()\n    onSubmit(lotteryNumber)\n  }\n\n  const handleChange = (evt: React.ChangeEvent<HTMLInputElement>) => {\n    if (evt.currentTarget.value) {\n      const value = parseInt(evt.currentTarget.value, 10)\n\n      // The max value will always be the initialLotteryNumber which equals\n      // the latest lottery round\n      setIsError(value > initialLotteryNumber)\n      setLotteryNumber(value)\n    } else {\n      setLotteryNumber(initialLotteryNumber)\n    }\n  }\n\n  return (\n    <Wrapper>\n      <Text>{t('Select lottery number:')}</Text>\n      <form onSubmit={handleSubmit}>\n        <SearchWrapper>\n          <InputWrapper>\n            <Input\n              value={lotteryNumber}\n              type=\"number\"\n              inputMode=\"numeric\"\n              min=\"0\"\n              isWarning={isError}\n              max={initialLotteryNumber}\n              onChange={handleChange}\n            />\n          </InputWrapper>\n          <ButtonWrapper>\n            <Button type=\"submit\" scale=\"sm\" disabled={isError}>\n              {t('Search')}\n            </Button>\n          </ButtonWrapper>\n        </SearchWrapper>\n      </form>\n    </Wrapper>\n  )\n}\n\nexport default PastLotterySearcher\n","import React from 'react'\nimport { Text } from '@pancakeswap/uikit'\n\ninterface PastRoundCardErrorProps {\n  error: {\n    message: string\n  }\n}\n\nconst PastRoundCardError: React.FC<PastRoundCardErrorProps> = ({ error }) => {\n  return <Text p=\"24px\">{error.message}</Text>\n}\n\nexport default PastRoundCardError\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Flex, Heading, Text } from '@pancakeswap/uikit'\n\ninterface HeadingProps {\n  valueToDisplay?: string\n  children?: string\n  Icon?: React.ComponentType\n}\n\nconst IconWrapper = styled.div`\n  margin-right: 16px;\n  svg {\n    width: 48px;\n    height: 48px;\n  }\n`\n\nconst LotteryCardHeading: React.FC<HeadingProps> = ({ valueToDisplay, children, Icon, ...props }) => {\n  return (\n    <Flex {...props}>\n      {Icon && (\n        <IconWrapper>\n          <Icon />\n        </IconWrapper>\n      )}\n      <Flex flexDirection=\"column\">\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {children}\n        </Text>\n        <Heading scale=\"lg\">{valueToDisplay}</Heading>\n      </Flex>\n    </Flex>\n  )\n}\n\nLotteryCardHeading.defaultProps = {\n  valueToDisplay: '',\n  Icon: () => <div />,\n  children: '',\n}\n\nexport default LotteryCardHeading\n","import React, { useCallback } from 'react'\nimport { Button, Modal } from '@pancakeswap/uikit'\nimport styled from 'styled-components'\nimport { useWinningNumbers } from 'hooks/useTickets'\nimport { useTranslation } from 'contexts/Localization'\n\ninterface UserTicketsModalProps {\n  myTicketNumbers: Array<any>\n  from?: string\n  onDismiss?: () => void\n}\n\nconst UserTicketsModal: React.FC<UserTicketsModalProps> = ({ myTicketNumbers, onDismiss, from }) => {\n  const winNumbers = useWinningNumbers()\n  const { t } = useTranslation()\n  const rewardMatch = useCallback(\n    (number) => {\n      let n = 0\n      for (let i = winNumbers.length - 1; i >= 0; i--) {\n        // eslint-disable-next-line eqeqeq\n        if (winNumbers[i] == number[i]) n++\n      }\n      return n\n    },\n    [winNumbers],\n  )\n\n  const listItems = myTicketNumbers.map((number, index) => {\n    if (rewardMatch(number[0]) > 1 && from !== 'buy') {\n      const emoji = new Array(rewardMatch(number[0]) + 1).join('🤑')\n      return (\n        // eslint-disable-next-line react/no-array-index-key\n        <RewardP key={index}>\n          {emoji}\n          {number.toString()}\n          {emoji}\n        </RewardP>\n      )\n    }\n    // eslint-disable-next-line react/no-array-index-key\n    return <p key={index}>{number.toString()}</p>\n  })\n\n  return (\n    <Modal title={t('My Tickets (Total: %TICKETS%)', { TICKETS: myTicketNumbers.length })} onDismiss={onDismiss}>\n      <TicketsList>\n        <h2>{listItems}</h2>\n      </TicketsList>\n      <StyledButton variant=\"secondary\" onClick={onDismiss}>\n        {t('Close')}\n      </StyledButton>\n    </Modal>\n  )\n}\n\nconst RewardP = styled.div`\n  color: #ff8c28;\n`\n\nconst TicketsList = styled.div`\n  text-align: center;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[2]}px;\n`\n\nexport default UserTicketsModal\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Button, LinkExternal, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { useWeb3React } from '@web3-react/core'\nimport useTickets from 'hooks/useTickets'\nimport UnlockButton from 'components/UnlockButton'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  padding-top: 24px;\n\n  & > div {\n    flex: 1;\n    width: 100%;\n  }\n`\n\nconst ExternalLinkWrap = styled(LinkExternal)`\n  align-items: center;\n  display: flex;\n  height: 48px;\n  justify-content: center;\n  text-decoration: none;\n  width: 100%;\n`\n\nconst TicketCard: React.FC<{ contractLink?: string; lotteryNumber?: number }> = ({ contractLink, lotteryNumber }) => {\n  const { t } = useTranslation()\n  const tickets = useTickets(lotteryNumber)\n  const ticketsLength = tickets.length\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n  const { account } = useWeb3React()\n\n  if (!account) {\n    return (\n      <Wrapper>\n        <UnlockButton />\n      </Wrapper>\n    )\n  }\n\n  return (\n    <Wrapper>\n      <Button disabled={ticketsLength === 0} onClick={onPresentMyTickets} width=\"100%\">\n        {t('View your tickets')}\n      </Button>\n      <ExternalLinkWrap href={contractLink}>{t('View on BscScan')}</ExternalLinkWrap>\n    </Wrapper>\n  )\n}\n\nexport default TicketCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTranslation } from 'contexts/Localization'\nimport { Heading, Text } from '@pancakeswap/uikit'\nimport { BigNumber } from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport CardBusdValue from '../../Home/components/CardBusdValue'\n\nexport interface PrizeGridProps {\n  lotteryPrizeAmount?: number\n  pastDraw?: boolean\n  jackpotMatches?: number\n  twoTicketMatches?: number\n  threeTicketMatches?: number\n}\n\nconst Grid = styled.div<{ pastDraw?: boolean }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => (props.pastDraw ? 3 : 2)}, 1fr);\n  grid-template-rows: repeat(4, auto);\n`\n\nconst RightAlignedText = styled(Text)`\n  text-align: right;\n`\n\nconst RightAlignedHeading = styled(Heading)`\n  text-align: right;\n`\n\nconst GridItem = styled.div<{ marginBottom?: string }>`\n  margin-bottom: ${(props) => (props.marginBottom ? props.marginBottom : '10px')};\n`\n\nconst PastDrawGridItem = styled(GridItem)`\n  transform: translate(-40%, 0%);\n`\n\nconst PrizeGrid: React.FC<PrizeGridProps> = ({\n  lotteryPrizeAmount = 0,\n  pastDraw = false,\n  jackpotMatches,\n  twoTicketMatches,\n  threeTicketMatches,\n}) => {\n  const fourMatchesAmount = +((lotteryPrizeAmount / 100) * 50).toFixed(0)\n  const threeMatchesAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const twoMatchesAmount = +((lotteryPrizeAmount / 100) * 10).toFixed(0)\n  const burnAmount = +((lotteryPrizeAmount / 100) * 20).toFixed(0)\n  const { t } = useTranslation()\n  const cakeBusdPrice = usePriceCakeBusd()\n\n  const getCakeBusdValue = (amount: number) => {\n    return new BigNumber(amount).multipliedBy(cakeBusdPrice).toNumber()\n  }\n\n  return (\n    <Grid pastDraw={pastDraw}>\n      <GridItem>\n        <Text fontSize=\"14px\" color=\"textSubtle\">\n          {t('No. Matched')}\n        </Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n            {t('Winners')}\n          </RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText fontSize=\"14px\" color=\"textSubtle\">\n          {t('Prize Pot')}\n        </RightAlignedText>\n      </GridItem>\n      {/* 4 matches row */}\n      <GridItem>\n        <Heading scale=\"md\">4</Heading>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedHeading scale=\"md\">{jackpotMatches}</RightAlignedHeading>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedHeading scale=\"md\">\n          {fourMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(fourMatchesAmount)} />}\n        </RightAlignedHeading>\n      </GridItem>\n      {/* 3 matches row */}\n      <GridItem>\n        <Text bold>3</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText bold>{threeTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {threeMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(threeMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* 2 matches row */}\n      <GridItem>\n        <Text>2</Text>\n      </GridItem>\n      {pastDraw && (\n        <PastDrawGridItem>\n          <RightAlignedText>{twoTicketMatches}</RightAlignedText>\n        </PastDrawGridItem>\n      )}\n      <GridItem>\n        <RightAlignedText>\n          {twoMatchesAmount.toLocaleString()}\n          {!pastDraw && !cakeBusdPrice.eq(0) && <CardBusdValue value={getCakeBusdValue(twoMatchesAmount)} />}\n        </RightAlignedText>\n      </GridItem>\n      {/* Burn row */}\n      <GridItem marginBottom=\"0\">\n        <Text>{t(`${pastDraw ? 'Burned' : 'To burn'}`)}:</Text>\n      </GridItem>\n      {pastDraw ? (\n        <>\n          <GridItem marginBottom=\"0\" />\n          <GridItem marginBottom=\"0\">\n            <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n          </GridItem>\n        </>\n      ) : (\n        <GridItem marginBottom=\"0\">\n          <RightAlignedText>{burnAmount.toLocaleString()}</RightAlignedText>\n        </GridItem>\n      )}\n    </Grid>\n  )\n}\n\nexport default PrizeGrid\n","const formatLotteryDate = (lotteryDate: string) => {\n  if (!lotteryDate) {\n    return {}\n  }\n\n  const date = new Date(lotteryDate)\n\n  const dateString = date.toDateString()\n  const hours = date.getUTCHours()\n  const monthAndDay = dateString.split(' ').splice(1, 2).join(' ')\n\n  return { hours, monthAndDay }\n}\n\nexport default formatLotteryDate\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport formatLotteryDate from '../helpers/formatLotteryDate'\n\nconst Wrapper = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n`\n\nconst Timestamp = ({ timeValue }) => {\n  const { monthAndDay, hours } = formatLotteryDate(timeValue)\n\n  return (\n    <Wrapper>\n      <Text fontSize=\"14px\">\n        {monthAndDay}, {hours}:00 UTC\n      </Text>\n    </Wrapper>\n  )\n}\n\nexport default Timestamp\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, CardBody, CardFooter, PancakeRoundIcon, TicketRound } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport LotteryCardHeading from '../LotteryCardHeading'\nimport PastLotteryActions from './PastLotteryActions'\nimport PrizeGrid from '../PrizeGrid'\nimport Timestamp from '../Timestamp'\n\ninterface PastRoundCardDetailsProps {\n  data: DataResponse\n}\n\nconst CardHeading = styled.div`\n  position: relative;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst TopLotteryCardHeading = styled(LotteryCardHeading)`\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`\n\nconst PastRoundCardDetails: React.FC<PastRoundCardDetailsProps> = ({ data }) => {\n  const { t } = useTranslation()\n\n  const {\n    contractLink,\n    jackpotTicket,\n    lotteryDate,\n    lotteryNumber,\n    lotteryNumbers,\n    match2Ticket,\n    match3Ticket,\n    poolSize,\n  } = data\n\n  return (\n    !data.error &&\n    data && (\n      <>\n        <CardBody>\n          <CardHeading>\n            <Timestamp timeValue={lotteryDate} />\n            <Heading scale=\"md\" mb=\"24px\">\n              Round #{lotteryNumber}\n            </Heading>\n            <TopLotteryCardHeading\n              valueToDisplay={`${lotteryNumbers[0]}, ${lotteryNumbers[1]}, ${lotteryNumbers[2]}, ${lotteryNumbers[3]}`}\n              Icon={TicketRound}\n            >\n              {t('Winning numbers')}\n            </TopLotteryCardHeading>\n            <LotteryCardHeading valueToDisplay={t(`${poolSize.toLocaleString()} CAKE`)} Icon={PancakeRoundIcon}>\n              {t('Total prizes')}\n            </LotteryCardHeading>\n          </CardHeading>\n        </CardBody>\n        <CardFooter>\n          <PrizeGrid\n            lotteryPrizeAmount={poolSize}\n            jackpotMatches={jackpotTicket}\n            twoTicketMatches={match2Ticket}\n            threeTicketMatches={match3Ticket}\n            pastDraw\n          />\n          <PastLotteryActions contractLink={contractLink} lotteryNumber={lotteryNumber} />\n        </CardFooter>\n      </>\n    )\n  )\n}\n\nexport default PastRoundCardDetails\n","import React from 'react'\nimport { Card } from '@pancakeswap/uikit'\nimport { DataResponse } from 'utils/getLotteryRoundData'\nimport PastRoundCardError from './PastRoundCardError'\nimport PastRoundCardDetails from './PastRoundCardDetails'\n\ninterface PastRoundCardProps {\n  error: {\n    message: string\n  }\n  data: DataResponse\n}\n\nconst PastRoundCard: React.FC<PastRoundCardProps> = ({ error, data }) => {\n  return <Card>{error.message ? <PastRoundCardError error={error} /> : <PastRoundCardDetails data={data} />}</Card>\n}\n\nexport default PastRoundCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nconst Loading: React.FC = () => <StyledLoading />\n\nconst StyledLoading = styled.div`\n  border: 8px solid #f3f3f3;\n  border-radius: 50%;\n  border-top: 8px solid #ddd;\n  border-bottom: 8px solid #ddd;\n  width: 20px;\n  height: 20px;\n  -webkit-animation: spin 2s linear infinite;\n  animation: spin 2s linear infinite;\n  @-webkit-keyframes spin {\n    0% {\n      -webkit-transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n    }\n  }\n\n  @keyframes spin {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`\n\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport getLotteryRoundData from 'utils/getLotteryRoundData'\nimport { useTranslation } from 'contexts/Localization'\nimport useGetRecentLotteryRoundData from 'hooks/useGetRecentLotteryRoundData'\nimport PastLotterySearcher from './PastLotterySearcher'\nimport PastRoundCard from './PastRoundCard'\nimport Loading from '../Loading'\n\nconst Wrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 552px; // height of final card\n`\n\nconst PastLotteryRoundViewer = () => {\n  const [state, setState] = useState({\n    roundData: null,\n    error: { message: null, type: null },\n    isInitialized: false,\n    isLoading: true,\n  })\n  const { data: initialLotteryData, mostRecentLotteryNumber } = useGetRecentLotteryRoundData()\n  const { t } = useTranslation()\n  const { roundData, error, isInitialized, isLoading } = state\n\n  useEffect(() => {\n    if (initialLotteryData) {\n      setState((prevState) => ({ ...prevState, isLoading: false, isInitialized: true, roundData: initialLotteryData }))\n    }\n  }, [initialLotteryData, setState])\n\n  const handleSubmit = async (lotteryNumber: number) => {\n    setState((prevState) => ({\n      ...prevState,\n      isLoading: true,\n    }))\n\n    getLotteryRoundData(lotteryNumber)\n      .then((data) => {\n        if (data.error) {\n          setState((prevState) => ({\n            ...prevState,\n            error: {\n              message: t('The lottery number you provided does not exist'),\n              type: 'out of range',\n            },\n            isLoading: false,\n            isInitialized: true,\n          }))\n        } else {\n          setState((prevState) => ({\n            ...prevState,\n            error: { message: null, type: null },\n            roundData: data,\n            isLoading: false,\n            isInitialized: true,\n          }))\n        }\n      })\n      .catch(() => {\n        setState((prevState) => ({\n          ...prevState,\n          error: { message: t('Error fetching data'), type: 'api' },\n          isLoading: false,\n          isInitialized: true,\n        }))\n      })\n  }\n\n  return (\n    <Wrapper>\n      <PastLotterySearcher initialLotteryNumber={mostRecentLotteryNumber} onSubmit={handleSubmit} />\n      {!isInitialized || isLoading ? (\n        <Card>\n          <StyledCardBody>\n            <Loading />\n          </StyledCardBody>\n        </Card>\n      ) : (\n        <PastRoundCard error={error} data={roundData} />\n      )}\n    </Wrapper>\n  )\n}\n\nexport default PastLotteryRoundViewer\n","import React, { lazy, Suspense, useContext, useMemo } from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { useTranslation } from 'contexts/Localization'\nimport useTheme from 'hooks/useTheme'\nimport Loading from '../Loading'\n\nconst Line = lazy(() => import('./LineChartWrapper'))\nconst Bar = lazy(() => import('./BarChartWrapper'))\n\nconst InnerWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`\ninterface HistoryChartProps {\n  showLast: 'max' | number\n}\n\nconst HistoryChart: React.FC<HistoryChartProps> = ({ showLast }) => {\n  const { t } = useTranslation()\n  const { isDark } = useTheme()\n  const { historyData, historyError } = useContext(PastLotteryDataContext)\n  const getDataArray = (kind) => {\n    const rawData = historyData\n      .map((dataPoint) => {\n        return dataPoint[kind]\n      })\n      .reverse()\n\n    return showLast === 'max' ? rawData : rawData.slice(Number(showLast) * -1)\n  }\n\n  const lineStyles = ({ color }) => {\n    return {\n      borderColor: color,\n      fill: false,\n      borderWidth: 2,\n      pointRadius: 0,\n      pointHitRadius: 10,\n    }\n  }\n\n  const chartData = {\n    labels: getDataArray('lotteryNumber'),\n    datasets: [\n      {\n        label: 'Pool Size',\n        data: getDataArray('poolSize'),\n        yAxisID: 'y-axis-pool',\n        ...lineStyles({ color: '#8F80BA' }),\n      },\n      {\n        label: 'Burned',\n        data: getDataArray('burned'),\n        yAxisID: 'y-axis-burned',\n        ...lineStyles({ color: '#1FC7D4' }),\n      },\n    ],\n  }\n\n  const axesStyles = ({ color, lineHeight }) => {\n    return {\n      borderCapStyle: 'round',\n      gridLines: { display: false },\n      ticks: {\n        fontFamily: 'Kanit, sans-serif',\n        fontColor: color,\n        fontSize: 12,\n        lineHeight,\n        maxRotation: 0,\n        beginAtZero: true,\n        autoSkipPadding: 15,\n        userCallback: (value) => {\n          return value.toLocaleString()\n        },\n      },\n    }\n  }\n\n  const options = useMemo(() => {\n    return {\n      tooltips: {\n        mode: 'index',\n        intersect: false,\n      },\n      legend: { display: false },\n      scales: {\n        yAxes: [\n          {\n            type: 'linear',\n            position: 'left',\n            id: 'y-axis-pool',\n            ...axesStyles({ color: '#8f80ba', lineHeight: 1.6 }),\n          },\n          {\n            type: 'linear',\n            position: 'right',\n            id: 'y-axis-burned',\n            ...axesStyles({ color: '#1FC7D4', lineHeight: 1.5 }),\n          },\n        ],\n        xAxes: [\n          {\n            ...axesStyles({ color: isDark ? '#FFFFFF' : '#452A7A', lineHeight: 1 }),\n          },\n        ],\n      },\n    }\n  }, [isDark])\n\n  return (\n    <>\n      {historyError && (\n        <InnerWrapper>\n          <Text>{t('Error fetching data')}</Text>\n        </InnerWrapper>\n      )}\n      {!historyError && historyData.length > 1 ? (\n        <Suspense fallback={<div>{t('Loading...')}</div>}>\n          {showLast === 50 || showLast === 100 ? (\n            <Bar data={chartData} options={options} />\n          ) : (\n            <Line data={chartData} options={options} type=\"line\" />\n          )}\n        </Suspense>\n      ) : (\n        <InnerWrapper>\n          <Loading />\n        </InnerWrapper>\n      )}\n    </>\n  )\n}\n\nexport default HistoryChart\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\n\nconst Wrapper = styled.div`\n  display: flex;\n  margin: 24px 0 24px;\n`\n\nconst LegendItem = styled.div`\n  display: flex;\n  margin-right: 18px;\n  align-items: center;\n`\n\nconst Circle = styled.div<{ isPoolSize?: boolean }>`\n  width: 20px;\n  height: 20px;\n  border-radius: 10px;\n  background-color: ${({ isPoolSize, theme }) => theme.colors[isPoolSize ? 'textSubtle' : 'primary']};\n  margin-right: 6px;\n`\n\nconst Legend = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Wrapper>\n      <LegendItem>\n        <Circle isPoolSize />\n        <Text>{t('Pool Size')}</Text>\n      </LegendItem>\n      <LegendItem>\n        <Circle />\n        <Text>{t('Burned')}</Text>\n      </LegendItem>\n    </Wrapper>\n  )\n}\n\nexport default Legend\n","import React, { useState } from 'react'\nimport { Heading, Card, CardBody, Text } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport styled from 'styled-components'\nimport Select, { OptionProps } from 'components/Select/Select'\nimport HistoryChart from './HistoryChart'\nimport Legend from './Legend'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  flex-direction: column-reverse;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    flex-wrap: nowrap;\n    flex-direction: row;\n  }\n`\n\nconst LabelWrapper = styled.div`\n  margin-top: 24px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    margin-top: 0;\n  }\n\n  > ${Text} {\n    font-size: 12px;\n  }\n`\n\nconst PastDrawsHistoryCard: React.FC = () => {\n  const { t } = useTranslation()\n  const [showLast, setShowLast] = useState<'max' | number>(50)\n  const handleShowLastChange = (option: OptionProps): void => {\n    setShowLast(option.value)\n  }\n\n  return (\n    <Card>\n      <CardBody>\n        <Heading scale=\"md\">{t('History')}</Heading>\n        <Wrapper>\n          <Legend />\n          <LabelWrapper>\n            <Text textTransform=\"uppercase\">{t('Show Last')}</Text>\n            <Select\n              options={[\n                {\n                  label: '50',\n                  value: 50,\n                },\n                {\n                  label: '100',\n                  value: 100,\n                },\n                {\n                  label: '200',\n                  value: 200,\n                },\n                {\n                  label: 'Max',\n                  value: 'max',\n                },\n              ]}\n              onChange={handleShowLastChange}\n            />\n          </LabelWrapper>\n        </Wrapper>\n        <HistoryChart showLast={showLast} />\n      </CardBody>\n    </Card>\n  )\n}\n\nexport default PastDrawsHistoryCard\n","import React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { Button, Heading, Won, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { useMultiClaimLottery } from 'hooks/useBuyLottery'\nimport useTickets, { useTotalClaim } from 'hooks/useTickets'\nimport Loading from '../Loading'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst WinningsWrapper = styled.div`\n  display: flex;\n  align-items: baseline;\n`\n\nconst IconWrapper = styled.div`\n  margin-bottom: 16px;\n\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst StyledCardActions = styled.div`\n  margin-top: ${(props) => props.theme.spacing[3]}px;\n`\n\nconst StyledCardContentInner = styled.div`\n  align-items: center;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: space-between;\n`\n\nconst StyledButton = styled(Button)`\n  margin-top: ${(props) => props.theme.spacing[1]}px;\n`\n\ninterface PrizesWonContentProps {\n  onSuccess: () => void\n}\n\nconst PrizesWonContent: React.FC<PrizesWonContentProps> = ({ onSuccess }) => {\n  const [requestedClaim, setRequestedClaim] = useState(false)\n  const { t } = useTranslation()\n  const { claimLoading, claimAmount } = useTotalClaim()\n  const { onMultiClaim } = useMultiClaimLottery()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  const handleClaim = useCallback(async () => {\n    try {\n      setRequestedClaim(true)\n      const txHash = await onMultiClaim()\n      // user rejected tx or didn't go thru\n      if (txHash) {\n        onSuccess()\n        setRequestedClaim(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onMultiClaim, setRequestedClaim, onSuccess])\n\n  const winnings = getBalanceNumber(claimAmount).toFixed(2)\n\n  return (\n    <StyledCardContentInner>\n      <IconWrapper>\n        <Won />\n      </IconWrapper>\n      <Heading as=\"h3\" scale=\"lg\" color=\"secondary\">\n        {t('You won!')}\n      </Heading>\n      {claimLoading && <Loading />}\n      {!claimLoading && (\n        <>\n          <WinningsWrapper>\n            <Heading as=\"h4\" scale=\"xl\" style={{ marginRight: '6px' }}>\n              {winnings}\n            </Heading>\n            <Heading as=\"h4\" scale=\"lg\">\n              CAKE\n            </Heading>\n          </WinningsWrapper>\n        </>\n      )}\n      <StyledCardActions>\n        <Button width=\"100%\" disabled={requestedClaim} onClick={handleClaim}>\n          {t('Collect')}\n        </Button>\n      </StyledCardActions>\n      <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n        {t('View your tickets')}\n      </StyledButton>\n    </StyledCardContentInner>\n  )\n}\n\nexport default PrizesWonContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Text, Button, useModal } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport useTickets from 'hooks/useTickets'\nimport MyTicketsModal from '../TicketCard/UserTicketsModal'\n\nconst Wrapper = styled.div`\n  display: flex;\n`\n\nconst TextWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n`\n\nconst StyledText = styled(Text)`\n  padding-left: 12px;\n`\n\nconst Image = styled.img`\n  margin-right: 6px;\n\n  ${({ theme }) => theme.mediaQueries.md} {\n    margin-right: 20px;\n  }\n`\nconst StyledButton = styled(Button)`\n  padding: 0 12px;\n  height: unset;\n`\n\nconst NoPrizesContent: React.FC = () => {\n  const { t } = useTranslation()\n  const tickets = useTickets()\n  const [onPresentMyTickets] = useModal(<MyTicketsModal myTicketNumbers={tickets} from=\"buy\" />)\n\n  return (\n    <Wrapper>\n      <Image src=\"/images/no-prize.svg\" alt=\"no prizes won\" />\n      <TextWrapper>\n        <StyledText color=\"textDisabled\">{t('Sorry, no prizes to collect')}</StyledText>\n        <StyledButton variant=\"text\" onClick={onPresentMyTickets}>\n          {t('View your tickets')}\n        </StyledButton>\n      </TextWrapper>\n    </Wrapper>\n  )\n}\n\nexport default NoPrizesContent\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, CardBody } from '@pancakeswap/uikit'\nimport PrizesWonContent from './PrizesWonContent'\nimport NoPrizesContent from './NoPrizesContent'\n\nconst StyledCard = styled(Card)`\n  ${(props) =>\n    props.isDisabled\n      ? `  \n        margin-top: 16px;\n        background-color: unset;\n        box-shadow: unset;\n        border: 1px solid ${props.theme.colors.textDisabled};\n\n        ${props.theme.mediaQueries.sm} {\n          margin-top: 24px;\n        }\n\n        ${props.theme.mediaQueries.lg} {\n          margin-top: 32px;\n        }\n        `\n      : ``}\n`\n\ninterface YourPrizesCardProps {\n  isAWin: boolean\n  onSuccess: () => void\n}\n\nconst YourPrizesCard: React.FC<YourPrizesCardProps> = ({ isAWin, onSuccess }) => {\n  return (\n    <StyledCard isDisabled={!isAWin} isActive={isAWin}>\n      <CardBody>{isAWin ? <PrizesWonContent onSuccess={onSuccess} /> : <NoPrizesContent />}</CardBody>\n    </StyledCard>\n  )\n}\n\nexport default YourPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Heading, Card, CardBody, Ticket } from '@pancakeswap/uikit'\nimport { useTranslation } from 'contexts/Localization'\nimport UnlockButton from 'components/UnlockButton'\n\nconst StyledCardBody = styled(CardBody)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 16px;\n  max-height: 196px;\n`\n\nconst StyledHeading = styled(Heading)`\n  margin: 16px 0;\n`\n\nconst IconWrapper = styled.div`\n  svg {\n    width: 80px;\n    height: 80px;\n  }\n`\n\nconst UnlockWalletCard = () => {\n  const { t } = useTranslation()\n\n  return (\n    <Card isActive>\n      <StyledCardBody>\n        <IconWrapper>\n          <Ticket />\n        </IconWrapper>\n        <div>\n          <StyledHeading scale=\"md\">{t('Unlock wallet to access lottery')}</StyledHeading>\n          <UnlockButton />\n        </div>\n      </StyledCardBody>\n    </Card>\n  )\n}\n\nexport default UnlockWalletCard\n","import React, { useCallback } from 'react'\nimport { Box } from '@pancakeswap/uikit'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTotalClaim } from 'hooks/useTickets'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport YourPrizesCard from './YourPrizesCard'\nimport UnlockWalletCard from './UnlockWalletCard'\n\nconst ClaimPrizesCard = () => {\n  const { account } = useWeb3React()\n  const { claimAmount, setLastUpdated } = useTotalClaim()\n  const winnings = getBalanceNumber(claimAmount)\n  const isAWin = winnings > 0\n\n  const handleSuccess = useCallback(() => {\n    setLastUpdated()\n  }, [setLastUpdated])\n\n  return (\n    <Box mb=\"32px\">\n      {!account ? <UnlockWalletCard /> : <YourPrizesCard isAWin={isAWin} onSuccess={handleSuccess} />}\n    </Box>\n  )\n}\n\nexport default ClaimPrizesCard\n","import React from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout } from '@pancakeswap/uikit'\nimport PastLotteryRoundViewer from './components/PastLotteryRoundViewer'\nimport PastDrawsHistoryCard from './components/PastDrawsHistory/PastDrawsHistoryCard'\nimport ClaimPrizesCard from './components/ClaimPrizesCard'\n\nconst Cards = styled(BaseLayout)`\n  align-items: start;\n  margin-bottom: 32px;\n\n  & > div {\n    grid-column: span 6;\n  }\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    & > div {\n      grid-column: span 12;\n    }\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    & > div {\n      grid-column: span 6;\n    }\n  }\n`\n\nconst SecondCardColumnWrapper = styled.div<{ isAWin?: boolean }>`\n  display: flex;\n  flex-direction: column;\n`\n\nconst BunnyImageWrapper = styled.div`\n  display: flex;\n  margin-top: 32px;\n  justify-content: center;\n`\n\nconst PastDrawsPage: React.FC = () => {\n  return (\n    <>\n      <ClaimPrizesCard />\n      <Cards>\n        <PastLotteryRoundViewer />\n        <SecondCardColumnWrapper>\n          <PastDrawsHistoryCard />\n          <BunnyImageWrapper>\n            <img src=\"/images/pancake-lottery-bunny.png\" alt=\"lottery bunny\" />\n          </BunnyImageWrapper>\n        </SecondCardColumnWrapper>\n      </Cards>\n    </>\n  )\n}\n\nexport default PastDrawsPage\n","import React, { useState, useEffect } from 'react'\nimport PastLotteryDataContext from 'contexts/PastLotteryDataContext'\nimport { getLotteryIssueIndex } from 'utils/lotteryUtils'\nimport { useLottery } from 'hooks/useContract'\nimport Page from 'components/layout/Page'\nimport Hero from './components/Hero'\nimport PastDrawsPage from './PastDrawsPage'\n\nconst Lottery: React.FC = () => {\n  const lotteryContract = useLottery()\n  const [historyData, setHistoryData] = useState([])\n  const [historyError, setHistoryError] = useState(false)\n  const [currentLotteryNumber, setCurrentLotteryNumber] = useState(0)\n  const [mostRecentLotteryNumber, setMostRecentLotteryNumber] = useState(1)\n\n  useEffect(() => {\n    fetch(`https://api.pancakeswap.com/api/lotteryHistory`)\n      .then((response) => response.json())\n      .then((data) => setHistoryData(data))\n      .catch(() => {\n        setHistoryError(true)\n      })\n  }, [])\n\n  useEffect(() => {\n    const getInitialLotteryIndex = async () => {\n      const index = await getLotteryIssueIndex(lotteryContract)\n      const previousLotteryNumber = index - 1\n\n      setCurrentLotteryNumber(index)\n      setMostRecentLotteryNumber(previousLotteryNumber)\n    }\n\n    if (lotteryContract) {\n      getInitialLotteryIndex()\n    }\n  }, [lotteryContract])\n\n  return (\n    <>\n      <Hero />\n      <Page>\n        <PastLotteryDataContext.Provider\n          value={{ historyError, historyData, mostRecentLotteryNumber, currentLotteryNumber }}\n        >\n          <PastDrawsPage />\n        </PastLotteryDataContext.Provider>\n      </Page>\n    </>\n  )\n}\n\nexport default Lottery\n","import React, { useEffect, useRef } from 'react'\nimport { useCountUp } from 'react-countup'\nimport { Text } from '@pancakeswap/uikit'\n\nexport interface CardValueProps {\n  value: number\n  decimals?: number\n  fontSize?: string\n  lineHeight?: string\n  prefix?: string\n  bold?: boolean\n  color?: string\n}\n\nconst CardValue: React.FC<CardValueProps> = ({\n  value,\n  decimals,\n  fontSize = '40px',\n  lineHeight = '1',\n  prefix = '',\n  bold = true,\n  color = 'text',\n}) => {\n  const { countUp, update } = useCountUp({\n    start: 0,\n    end: value,\n    duration: 1,\n    separator: ',',\n    decimals:\n      // eslint-disable-next-line no-nested-ternary\n      decimals !== undefined ? decimals : value < 0 ? 4 : value > 1e5 ? 0 : 3,\n  })\n\n  const updateValue = useRef(update)\n\n  useEffect(() => {\n    updateValue.current(value)\n  }, [value, updateValue])\n\n  return (\n    <Text bold={bold} fontSize={fontSize} style={{ lineHeight }} color={color}>\n      {prefix}\n      {countUp}\n    </Text>\n  )\n}\n\nexport default CardValue\n","import React from 'react'\nimport CardValue, { CardValueProps } from './CardValue'\n\nconst CardBusdValue: React.FC<CardValueProps> = (props) => {\n  return (\n    <CardValue fontSize=\"14px\" lineHeight=\"1.1\" color=\"textSubtle\" prefix=\"~$\" bold={false} decimals={2} {...props} />\n  )\n}\n\nexport default CardBusdValue\n","/* eslint-disable no-await-in-loop */\nimport BigNumber from 'bignumber.js'\nimport { Interface } from '@ethersproject/abi'\nimport { getWeb3NoAccount } from 'utils/web3'\nimport MultiCallAbi from 'config/abi/Multicall.json'\nimport ticketAbi from 'config/abi/lotteryNft.json'\nimport lotteryAbi from 'config/abi/lottery.json'\nimport { DEFAULT_TOKEN_DECIMAL, LOTTERY_TICKET_PRICE } from 'config'\nimport { AbiItem } from 'web3-utils'\nimport { getMulticallAddress } from './addressHelpers'\nimport { BIG_ZERO } from './bigNumber'\n\nexport const multiCall = async (abi, calls) => {\n  const web3 = getWeb3NoAccount()\n  const multi = new web3.eth.Contract(MultiCallAbi as unknown as AbiItem, getMulticallAddress())\n  const itf = new Interface(abi)\n  let res = []\n  if (calls.length > 100) {\n    let i = 0\n    while (i < calls.length / 100) {\n      const newCalls = calls.slice(i * 100, 100 * (i + 1))\n      const calldata = newCalls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n      const { returnData } = await multi.methods.aggregate(calldata).call()\n      i++\n      res = res.concat(returnData.map((call, index) => itf.decodeFunctionResult(newCalls[index][1], call)))\n    }\n  } else {\n    const calldata = calls.map((call) => [call[0].toLowerCase(), itf.encodeFunctionData(call[1], call[2])])\n    const { returnData } = await multi.methods.aggregate(calldata).call()\n    res = returnData.map((call, i) => itf.decodeFunctionResult(calls[i][1], call))\n  }\n  return res\n}\n\nexport const multiBuy = async (lotteryContract, price, numbersList, account) => {\n  try {\n    return lotteryContract.methods\n      .multiBuy(new BigNumber(price).times(DEFAULT_TOKEN_DECIMAL).toString(), numbersList)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTickets = async (lotteryContract, ticketsContract, account, customLotteryNum) => {\n  const issueIndex = customLotteryNum || (await lotteryContract.methods.issueIndex().call())\n  const length = await getTicketsAmount(ticketsContract, account)\n\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n  const ticketIssues = await multiCall(ticketAbi, calls2)\n\n  const finalTokenids = []\n  ticketIssues.forEach(async (ticketIssue, i) => {\n    if (new BigNumber(ticketIssue).eq(issueIndex)) {\n      finalTokenids.push(tokenIds[i])\n    }\n  })\n  const calls3 = finalTokenids.map((id) => [ticketsContract.options.address, 'getLotteryNumbers', [id]])\n  const tickets = await multiCall(ticketAbi, calls3)\n\n  await getLotteryStatus(lotteryContract)\n  return tickets\n}\n\nexport const getTicketsAmount = async (ticketsContract, account) => {\n  return ticketsContract.methods.balanceOf(account).call()\n}\n\nexport const multiClaim = async (lotteryContract, ticketsContract, account) => {\n  await lotteryContract.methods.issueIndex().call()\n  const length = await getTicketsAmount(ticketsContract, account)\n  // eslint-disable-next-line prefer-spread\n  const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n    ticketsContract.options.address,\n    'tokenOfOwnerByIndex',\n    [account, i],\n  ])\n  const res = await multiCall(ticketAbi, calls1)\n  const tokenIds = res.map((id) => id.toString())\n\n  const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n  const claimedStatus = await multiCall(ticketAbi, calls2)\n\n  const unClaimedIds = tokenIds.filter((id, index) => !claimedStatus[index][0])\n\n  const calls3 = unClaimedIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n  const rewards = await multiCall(lotteryAbi, calls3)\n\n  let finalTokenIds = []\n  rewards.forEach((r, i) => {\n    if (r > 0) {\n      finalTokenIds.push(unClaimedIds[i])\n    }\n  })\n\n  if (finalTokenIds.length > 200) {\n    finalTokenIds = finalTokenIds.slice(0, 200)\n  }\n\n  try {\n    return lotteryContract.methods\n      .multiClaim(finalTokenIds)\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  } catch (err) {\n    return console.error(err)\n  }\n}\n\nexport const getTotalClaim = async (lotteryContract, ticketsContract, account) => {\n  try {\n    const issueIndex = await lotteryContract.methods.issueIndex().call()\n    const length = await getTicketsAmount(ticketsContract, account)\n    // eslint-disable-next-line prefer-spread\n    const calls1 = Array.apply(null, { length } as unknown[]).map((a, i) => [\n      ticketsContract.options.address,\n      'tokenOfOwnerByIndex',\n      [account, i],\n    ])\n    const res = await multiCall(ticketAbi, calls1)\n    const tokenIds = res.map((id) => id.toString())\n    const calls2 = tokenIds.map((id) => [ticketsContract.options.address, 'getLotteryIssueIndex', [id]])\n    const ticketIssues = await multiCall(ticketAbi, calls2)\n    const calls3 = tokenIds.map((id) => [ticketsContract.options.address, 'getClaimStatus', [id]])\n    const claimedStatus = await multiCall(ticketAbi, calls3)\n\n    const drawed = await getLotteryStatus(lotteryContract)\n\n    const finalTokenIds = []\n    ticketIssues.forEach(async (ticketIssue, i) => {\n      // eslint-disable-next-line no-empty\n      if (!drawed && ticketIssue.toString() === issueIndex) {\n      } else if (!claimedStatus[i][0]) {\n        finalTokenIds.push(tokenIds[i])\n      }\n    })\n\n    const calls4 = finalTokenIds.map((id) => [lotteryContract.options.address, 'getRewardView', [id]])\n\n    const rewards = await multiCall(lotteryAbi, calls4)\n    const claim = rewards.reduce((p, c) => BigNumber.sum(p, c), BIG_ZERO)\n\n    return claim\n  } catch (err) {\n    console.error(err)\n  }\n  return BIG_ZERO\n}\n\nexport const getTotalRewards = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return lotteryContract.methods.getTotalRewards(issueIndex).call()\n}\n\nexport const getMax = async (lotteryContract) => {\n  return lotteryContract.methods.maxNumber().call()\n}\n\nexport const getLotteryIssueIndex = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  return issueIndex\n}\n\nexport const getLotteryStatus = async (lotteryContract) => {\n  return lotteryContract.methods.drawed().call()\n}\n\nexport const getMatchingRewardLength = async (lotteryContract, matchNumber) => {\n  let issueIndex = await lotteryContract.methods.issueIndex().call()\n  const drawed = await lotteryContract.methods.drawed().call()\n  if (!drawed) {\n    issueIndex -= 1\n  }\n  try {\n    const amount = await lotteryContract.methods.historyAmount(issueIndex, 5 - matchNumber).call()\n\n    return new BigNumber(amount).div(DEFAULT_TOKEN_DECIMAL).div(LOTTERY_TICKET_PRICE).toNumber()\n  } catch (err) {\n    console.error(err)\n  }\n  return 0\n}\n\nexport const getWinningNumbers = async (lotteryContract) => {\n  const issueIndex = await lotteryContract.methods.issueIndex().call()\n  const numbers = []\n  const drawed = await lotteryContract.methods.drawed().call()\n\n  if (!drawed && parseInt(issueIndex, 10) === 0) {\n    return [0, 0, 0, 0]\n  }\n  if (!drawed) {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.historyNumbers(issueIndex - 1, i).call()).toString())\n    }\n  } else {\n    for (let i = 0; i < 4; i++) {\n      numbers.push(+(await lotteryContract.methods.winningNumbers(i).call()).toString())\n    }\n  }\n  return numbers\n}\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport BigNumber from 'bignumber.js'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { BIG_ZERO } from 'utils/bigNumber'\nimport useRefresh from './useRefresh'\nimport {\n  getTotalRewards,\n  getTotalClaim,\n  getMatchingRewardLength,\n  getWinningNumbers,\n  getTickets,\n} from '../utils/lotteryUtils'\nimport useLastUpdated from './useLastUpdated'\n\nconst useTickets = (lotteryNumber = null) => {\n  const [tickets, setTickets] = useState([])\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTickets(lotteryContract, ticketsContract, account, lotteryNumber)\n      setTickets(res)\n    }\n\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, lotteryContract, ticketsContract, fastRefresh, lotteryNumber])\n\n  return tickets\n}\n\nexport const useTotalRewards = () => {\n  const [rewards, setRewards] = useState(BIG_ZERO)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTotalRewards(lotteryContract)\n      setRewards(new BigNumber(res))\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, fastRefresh])\n\n  return rewards\n}\n\nexport const useTotalClaim = () => {\n  const [claimAmount, setClaimAmount] = useState(BIG_ZERO)\n  const [claimLoading, setClaimLoading] = useState(false)\n  const { account } = useWeb3React()\n  const ticketsContract = useLotteryTicket()\n  const lotteryContract = useLottery()\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\n\n  const fetchBalance = useCallback(async () => {\n    setClaimLoading(true)\n    const claim = await getTotalClaim(lotteryContract, ticketsContract, account)\n    setClaimAmount(claim)\n    setClaimLoading(false)\n  }, [account, lotteryContract, ticketsContract])\n\n  useEffect(() => {\n    if (account && lotteryContract && ticketsContract) {\n      fetchBalance()\n    }\n  }, [account, fetchBalance, lotteryContract, ticketsContract, lastUpdated])\n\n  return { claimLoading, claimAmount, setLastUpdated }\n}\n\nexport const useWinningNumbers = () => {\n  const [winningNumbers, setWinningNumbers] = useState([0, 0, 0, 0])\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rewards = await getWinningNumbers(lotteryContract)\n      setWinningNumbers(rewards)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [fastRefresh, lotteryContract, setWinningNumbers])\n\n  return winningNumbers\n}\n\nexport const useMatchingRewardLength = (numbers) => {\n  const [matchingNumbers, setMatchingNumbers] = useState(0)\n  const lotteryContract = useLottery()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const matchedNumbers = await getMatchingRewardLength(lotteryContract, numbers)\n      setMatchingNumbers(matchedNumbers)\n    }\n\n    if (lotteryContract) {\n      fetchBalance()\n    }\n  }, [lotteryContract, numbers, fastRefresh])\n\n  return matchingNumbers\n}\n\nexport default useTickets\n","import { useCallback, useState, useEffect } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { useLottery, useLotteryTicket } from 'hooks/useContract'\nimport { multiClaim, getMax, multiBuy } from '../utils/lotteryUtils'\n\nexport const useMultiClaimLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n  const lotteryTicketContract = useLotteryTicket()\n\n  const handleClaim = useCallback(async () => {\n    try {\n      const txHash = await multiClaim(lotteryContract, lotteryTicketContract, account)\n      return txHash\n    } catch (e) {\n      return false\n    }\n  }, [account, lotteryContract, lotteryTicketContract])\n\n  return { onMultiClaim: handleClaim }\n}\n\nexport const useMultiBuyLottery = () => {\n  const { account } = useWeb3React()\n  const lotteryContract = useLottery()\n\n  const handleBuy = useCallback(\n    async (amount: string, numbers: Array<any>) => {\n      try {\n        const txHash = await multiBuy(lotteryContract, amount, numbers, account)\n        return txHash\n      } catch (e) {\n        return false\n      }\n    },\n    [account, lotteryContract],\n  )\n\n  return { onMultiBuy: handleBuy }\n}\n\nexport const useMaxNumber = () => {\n  const [max, setMax] = useState(5)\n  const lotteryContract = useLottery()\n\n  const fetchMax = useCallback(async () => {\n    const maxNumber = await getMax(lotteryContract)\n    setMax(maxNumber)\n  }, [lotteryContract])\n\n  useEffect(() => {\n    if (lotteryContract) {\n      fetchMax()\n    }\n  }, [lotteryContract, fetchMax])\n\n  return max\n}\n","import React, { useState, useRef, useEffect } from 'react'\nimport styled, { css } from 'styled-components'\nimport { ArrowDropDownIcon, Text } from '@pancakeswap/uikit'\n\nconst DropDownHeader = styled.div`\n  width: 100%;\n  height: 40px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0px 16px;\n  box-shadow: ${({ theme }) => theme.shadows.inset};\n  border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n  border-radius: 16px;\n  background: ${({ theme }) => theme.colors.input};\n  transition: border-radius 0.15s;\n`\n\nconst DropDownListContainer = styled.div`\n  min-width: 136px;\n  height: 0;\n  position: absolute;\n  overflow: hidden;\n  background: ${({ theme }) => theme.colors.input};\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n  transition: transform 0.15s, opacity 0.15s;\n  transform: scaleY(0);\n  transform-origin: top;\n  opacity: 0;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n`\n\nconst DropDownContainer = styled.div<{ isOpen: boolean; width: number; height: number }>`\n  cursor: pointer;\n  width: ${({ width }) => width}px;\n  position: relative;\n  background: ${({ theme }) => theme.colors.input};\n  border-radius: 16px;\n  height: 40px;\n  min-width: 136px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    min-width: 168px;\n  }\n\n  ${(props) =>\n    props.isOpen &&\n    css`\n      ${DropDownHeader} {\n        border-bottom: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n        border-radius: 16px 16px 0 0;\n      }\n\n      ${DropDownListContainer} {\n        height: auto;\n        transform: scaleY(1);\n        opacity: 1;\n        border: 1px solid ${({ theme }) => theme.colors.inputSecondary};\n        border-top-width: 0;\n        border-radius: 0 0 16px 16px;\n        box-shadow: ${({ theme }) => theme.tooltip.boxShadow};\n      }\n    `}\n\n  svg {\n    position: absolute;\n    right: 16px;\n    top: 50%;\n    transform: translateY(-50%);\n  }\n`\n\nconst DropDownList = styled.ul`\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n  z-index: ${({ theme }) => theme.zIndices.dropdown};\n`\n\nconst ListItem = styled.li`\n  list-style: none;\n  padding: 8px 16px;\n  &:hover {\n    background: ${({ theme }) => theme.colors.inputSecondary};\n  }\n`\n\nexport interface SelectProps {\n  options: OptionProps[]\n  onChange?: (option: OptionProps) => void\n}\n\nexport interface OptionProps {\n  label: string\n  value: any\n}\n\nconst Select: React.FunctionComponent<SelectProps> = ({ options, onChange }) => {\n  const containerRef = useRef(null)\n  const dropdownRef = useRef(null)\n  const [isOpen, setIsOpen] = useState(false)\n  const [selectedOption, setSelectedOption] = useState(options[0])\n  const [containerSize, setContainerSize] = useState({ width: 0, height: 0 })\n\n  const toggling = () => setIsOpen(!isOpen)\n\n  const onOptionClicked = (option: OptionProps) => () => {\n    setSelectedOption(option)\n    setIsOpen(false)\n\n    if (onChange) {\n      onChange(option)\n    }\n  }\n\n  useEffect(() => {\n    setContainerSize({\n      width: dropdownRef.current.offsetWidth, // Consider border\n      height: dropdownRef.current.offsetHeight,\n    })\n  }, [])\n\n  return (\n    <DropDownContainer isOpen={isOpen} ref={containerRef} {...containerSize}>\n      {containerSize.width !== 0 && (\n        <DropDownHeader onClick={toggling}>\n          <Text>{selectedOption.label}</Text>\n        </DropDownHeader>\n      )}\n      <ArrowDropDownIcon color=\"text\" onClick={toggling} />\n      <DropDownListContainer>\n        <DropDownList ref={dropdownRef}>\n          {options.map((option) =>\n            option.label !== selectedOption.label ? (\n              <ListItem onClick={onOptionClicked(option)} key={option.label}>\n                <Text>{option.label}</Text>\n              </ListItem>\n            ) : null,\n          )}\n        </DropDownList>\n      </DropDownListContainer>\n    </DropDownContainer>\n  )\n}\n\nexport default Select\n"],"sourceRoot":""}